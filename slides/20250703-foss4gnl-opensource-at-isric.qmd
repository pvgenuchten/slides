---
title: Open Source at ISRIC - World Soil Information
subtitle: FOSS4G NL, Wageningen
author: Paul van Genuchten
date: 2025-07-03
format:
  revealjs: 
    theme: default
    logo: https://www.isric.org/themes/custom/basic/logo.svg
    footer: "Open Source at ISRIC - World Soil Information - FOSS4G.nl - july 2025"
  pptx:
    slide-level: 2
---

## ISRIC - World Soil Information

- Foundation funded by Dutch Government to maintain a global collection of reference soil samples ([ISIS](https://isis.isric.org))
- Collect and harmonize soil observation data from around the globe ([WOSIS](https://www.isric.org/explore/wosis))
- Globally predict the distribution of soil properties ([Soilgrids](https://www.isric.org/explore/soilgrids))
- Capacity building on soil data management at soil institutes around the globe ([Academy](https://resources.isric.org))
- Participate in [research projects](https://www.isric.org/projects) to innovate the soil sciences

## World Soil Museum

![World Soil Museum by [tinker.nl](https://tinker.nl/en/work/world-soil-museum)](https://tinker.nl/img/cache/media_6828_widen_3840-upscale_90-2349_world-soil-museum01_0.webp)

## Typical use cases for FOSS(4G) software

- Field data collection (OpenDataKit)
- Harmonize soil data (Hale, PostGres, Postgraphile, Apache Superset)
- Predict soil property distribution (R, Terra, GDAL)
- Cataloguing (pygeometa, pycsw, geonetwork)
- Data API's (Mapserver, FastAPI, Virtuoso)
- Content management (Quarto, Drupal)
- GIS viewers (QGIS, Leaflet, Deck.gl, TerriaJS)
- DevOps (Kubernetes, Gitlab, Argo)

## OSGeo and Open GeoSpatial Consortium

- The OGC community provides standards for data api's & data formats
- As independent foundation we aim to be neutral to software vendors, offered by standardised api's 
- OSGeo tools are commonly OGC compliant, many innovations at OGC are driven by open source software
- Open formats enable future backwards compatibility for today's datasets

## Relevant OGC standards

- Web Map Service, Web Coverage Service, Web Feature service, Catalogue service for the web
- Sensor Observation Service ([INSPIRE Soil](https://knowledge-base.inspire.ec.europa.eu/publications/inspire-data-specification-soil-technical-guidelines_en) is based on [Observations&Measurements](https://www.ogc.org/standards/om/))
- GeoPackage (See [INSPIRE Good Practice on GeoPackage](https://github.com/INSPIRE-MIF/gp-geopackage-encodings))
- Styled Layer Descriptor ([SLD](https://www.ogc.org/standards/sld/))
- Cloud Optimised GeoTiff ([COG](https://cogeo.org/))
- OGC API - Records

## OGC and FAIR

- FAIR principles (Findable Accessible Interoperable Reusable) are popular in academia (and beyond)
- FAIR and OGC pursue slightly different goals, however OGC recently started a working group on [open science](https://www.ogc.org/initiatives/open-science/)
- Academia assumes a dataset as a stable set of records, preferably reviewed and identified with a persistant identifier (DOI)
- OGC API's facilitate extracting subsets of a dataset, datasets are usually not stable over time
- Novel data formats allow subsetting via range requests, they may facilitate both uses (GeoParquet, COG)
- Alignment of vocabularies is relevant for both communities, not many tooling available (SKOS)

## Shift from OSGeo developer to OSGeo user

- 3yrs ago, I shifted from software development to ISRIC
- Current tasks are data science, DevOps, software development
- Some experiences around OSGeo software from a user perspective

## Mapserver

- We hire a consultant from the mapserver developer community for expert advice and development
- Some minor bug fixes on our behalf
- SLD support, you can now use a SLD file to configure the style of a layer
- Currently working on Mapserver Homepage, presenting a list of the services available in a server
- I'm not following the mailinglist as much as needed

## TerriaJS

- We use TerriaJS in 5-10 websites. Mostly to share our data products to potential users and stakeholders.
- Any frontend application typically has many potential improvements
- Especcially improvements around OGC interactions best be merged upstream
- The TerriaJS community is not very aware of OGC standards, so it requires quite communication to land a Pull Request
- We work with a frontend developer not related to the project, because it was difficult to reach out to direct contributors

## CKAN

- We asked university-support to deploy a default instance of CKAN (+SOLR), however it does then not include the spatial modules and tailored layout 
- We consulted a regional company knowledgable on CKAN implementations, they advised us to use the CKAN backend only and build a dedicated fromtend
- The spatial modules of CKAN seem not maintained
- We decided not to continue with CKAN for now

## pycsw

- A minimalistic catalogue implementation, but very focussed on OGC standards support
- Since OGC API's pycsw has a (html) user interface
- We feel it is a good fit for our use cases
- Sometimes I get complaints that it is not as full featured as CKAN, but it's hard to understand what's actually missing
- We recently landed Facet filters on OGC API Records and in pycsw
- A group in norway is implementing a SOLR backend for pycsw

## Cloud Optimised Geotiff / GDAL

- Tiff is an important format for us, we have 100's of GB of tiff data
- Previously we would use tiff image pyramids to store global data, now switching to COG
- Mapserver with a COG backend is many times faster then a plain tiff backend
- Direct access from web to COG is not feasible yet, because our tiff data does not use a mercator projection, many repositories do not allow CORS
- We're open to suggestions...

## [Apache Superset](https://superset.apache.org/)

- I really enjoy creating [diagrams of arbitrary data](https://dashboards.isric.org/superset/dashboard/soilwise/)
- Unfortunate that it is a complex tool with many dependencies (redis, postgres)

## Humboldt Alignment Editor ([HALE](https://github.com/halestudio/hale))

- Hale is a relevant tool for working with rich UML data models, such as soil observation data
- Developers tend to focus on exporting postgres data to INSPIRE GML, but our use case is often vice versa
- We hired the Wetransform team for a training and Q&A on specific data (20hrs)
- With the experts available, we were productive in 2 days, I wonder if I would have managed by myself, GML has its peculiarities
- I notice our data scientists prefer data migration through R/Python scripts. However I see value in a visual Hale approach.

## Quarto

- Static Site Generators fit our approach very well, performant, stable, secure
- Some colleagues have challenges with the markdown in gitlab (and prefer wordpress)
- Intially we started with [hugo](https://gohugo.io)
- [Quarto](https://quarto.org) was used by our data scientists for documentation, we aligned with them
- I do appreciate Quarto now, it is less flexible, but full featured, it generated these slides

## Conclusions

-

## Questions / Comments

-
